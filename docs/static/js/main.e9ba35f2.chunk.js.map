{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifReactApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loaing","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","loading","GifReactApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAsB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAC,4BAAQA,GAAR,CAAWP,OAC1BC,EAAc,MAOjB,SACG,uBACKO,KAAK,OACLC,MAAOT,EACPU,SAvBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UACpDH,GAFiB,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbnB,kBAkBZM,GAlBY,4CAAH,sDCqBLO,EAlBM,SAACf,GAAc,IAAD,EACPd,mBAAS,CACjCqB,KAAM,GACNS,QAAQ,IAHuB,mBAC1BC,EAD0B,KACnBC,EADmB,KAejC,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACC,GACtBH,EAAS,CACPX,KAAMc,EACNL,QAAQ,SAGX,CAAChB,IAEGiB,GChBIK,EAAc,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKqB,UAAW,yCAAhB,UACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCDGc,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EAGLe,EAAaf,GAAjCa,EAHyB,EAG/BN,KAAcoB,EAHiB,EAGjBA,QAOtB,OACE,qCACE,qBAAIJ,UAAW,oCAAf,cAAsDvB,EAAtD,OAEC2B,GAAW,mBAAGJ,UAAW,mCAAd,qBAEZ,qBAAKA,UAAW,YAAhB,SACGV,EAAOJ,KAAI,SAACC,GAAD,OAEV,aADA,CACC,EAAD,eAA8BA,GAAZA,EAAIC,aCKjBiB,EAxBK,WAAM,MAGY1C,mBAAS,CAAC,WAHtB,mBAGjB2C,EAHiB,KAGL5C,EAHK,KASxB,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCdxB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e9ba35f2.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n     const [inputValue, setInputValue] = useState('')\r\n\r\n     const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n\r\n        \r\n     }\r\n\r\n     const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 1){\r\n\r\n           setCategories(c => [...c, inputValue])\r\n           setInputValue('')\r\n        }\r\n      //   console.log('agregado');\r\n      //   console.log(setCategories())\r\n     }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}/>\r\n           {/* <button className=\"btn\">Agregar</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\n// propiedad es requerida\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n      category\r\n    )}&limit=10&api_key=TwcPZBAq6DGuHkl4sj6mpaO6ZKoYkl1J`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n\r\n    return gifs\r\n    //console.log(gifs);\r\n\r\n    //setImages(gifs);\r\n  };\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loaing: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loaing: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className={\"card animate__animated animate__fadeIn\"}>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  // useEffect(() => {\r\n  //   getGifs(category)\r\n  //       .then(setImages)\r\n  // }, [category]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className={'animate__animated animate__fadeIn'}> {category} </h3>\r\n\r\n      {loading && <p className={'animate__animated animate__flash'}>Loading</p>}\r\n\r\n      <div className={\"card-grid\"}>\r\n        {images.map((img) => (\r\n          //   return <li key={img.id}>{img.title}</li>;\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n//! 13 custom hooks\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\n\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifReactApp = () => {\r\n  // const categories = ['One piece', 'Bleach', 'Naruto'];\r\n\r\n  const [categories, setCategories] = useState([\"Bleach\"]);\r\n \r\n//   const handleAdd = () =>{\r\n//       setCategories([...categories,'Hunter x Hunter']);\r\n//   }\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif React App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      {/* <ol> */}\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifReactApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifReactApp from './GifReactApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifReactApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}